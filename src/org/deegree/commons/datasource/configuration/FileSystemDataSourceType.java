/*----------------------------------------------------------------------------
 This file is part of deegree, http://deegree.org/
 Copyright (C) 2001-2009 by:
   Department of Geography, University of Bonn
 and
   lat/lon GmbH

 This library is free software; you can redistribute it and/or modify it under
 the terms of the GNU Lesser General Public License as published by the Free
 Software Foundation; either version 2.1 of the License, or (at your option)
 any later version.
 This library is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 details.
 You should have received a copy of the GNU Lesser General Public License
 along with this library; if not, write to the Free Software Foundation, Inc.,
 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

 Contact information:

 lat/lon GmbH
 Aennchenstr. 19, 53177 Bonn
 Germany
 http://lat-lon.de/

 Department of Geography, University of Bonn
 Prof. Dr. Klaus Greve
 Postfach 1147, 53001 Bonn
 Germany
 http://www.geographie.uni-bonn.de/deegree/

 e-mail: info@deegree.org
----------------------------------------------------------------------------*/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.05.12 at 09:37:19 AM CEST
//


package org.deegree.commons.datasource.configuration;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 *
 *         The filesystem is a common datasource, examples are rasters, elevationmodels or xml files. Heck... every file can be a datasource.
 *
 *
 * <p>Java class for FileSystemDataSourceType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="FileSystemDataSourceType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.deegree.org/datasource}AbstractDataSourceType">
 *       &lt;choice>
 *         &lt;element ref="{http://www.deegree.org/datasource}AbstractFile" maxOccurs="unbounded"/>
 *         &lt;element ref="{http://www.deegree.org/datasource}AbstractFileSet"/>
 *       &lt;/choice>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FileSystemDataSourceType", propOrder = {
    "abstractFile",
    "abstractFileSet"
})
@XmlSeeAlso({
    ElevationModelDataSource.class
})
public class FileSystemDataSourceType
    extends AbstractDataSourceType
{

    @XmlElementRef(name = "AbstractFile", namespace = "http://www.deegree.org/datasource", type = JAXBElement.class)
    protected List<JAXBElement<? extends FileType>> abstractFile;
    @XmlElementRef(name = "AbstractFileSet", namespace = "http://www.deegree.org/datasource", type = JAXBElement.class)
    protected JAXBElement<? extends FileSetType> abstractFileSet;

    /**
     * Gets the value of the abstractFile property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the abstractFile property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAbstractFile().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link FileType }{@code >}
     * {@link JAXBElement }{@code <}{@link FileType }{@code >}
     * {@link JAXBElement }{@code <}{@link FileType }{@code >}
     * {@link JAXBElement }{@code <}{@link RasterFileType }{@code >}
     *
     *
     */
    public List<JAXBElement<? extends FileType>> getAbstractFile() {
        if (abstractFile == null) {
            abstractFile = new ArrayList<JAXBElement<? extends FileType>>();
        }
        return this.abstractFile;
    }

    /**
     * Gets the value of the abstractFileSet property.
     *
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link FileSetType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RasterFileSetType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FileSetType }{@code >}
     *
     */
    public JAXBElement<? extends FileSetType> getAbstractFileSet() {
        return abstractFileSet;
    }

    /**
     * Sets the value of the abstractFileSet property.
     *
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link FileSetType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RasterFileSetType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FileSetType }{@code >}
     *
     */
    public void setAbstractFileSet(JAXBElement<? extends FileSetType> value) {
        this.abstractFileSet = ((JAXBElement<? extends FileSetType> ) value);
    }

}
